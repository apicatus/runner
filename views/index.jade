doctype html
html(ng-app="Runner", lang="en")
    head
        title API Runner
        meta(charset="utf-8")
        meta(http-equiv="X-UA-Compatible", content="IE=edge")
        meta(name="description", content="")
        meta(name="robots", content="noindex, nofollow")
        meta(name="viewport" content="width=device-width")
        link(rel="stylesheet", href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css")
        link(rel="stylesheet", href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css")
        script(src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js")
        // lodash
        script(src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/2.4.1/lodash.min.js")
        // angular
        script(src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.0/angular.js")
        // ui-bootstrap
        script(src="//cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/0.11.2/ui-bootstrap-tpls.min.js")
        script(src="//cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/0.11.2/ui-bootstrap.min.js")
        // ui-utils
        script(src="//cdnjs.cloudflare.com/ajax/libs/angular-ui-utils/0.1.1/angular-ui-utils.min.js")
        // ng-animate
        script(src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.0/angular-animate.min.js")
        // ui-router
        script(src="//cdnjs.cloudflare.com/ajax/libs/angular-ui-router/0.2.11/angular-ui-router.min.js")
        // restangular
        script(src="//cdnjs.cloudflare.com/ajax/libs/restangular/1.4.0/restangular.min.js")
        // async
        script(src="//cdnjs.cloudflare.com/ajax/libs/async/0.9.0/async.js")

        style(type="text/css", media="screen, projection").
            body {
                margin-top: 50px;
            }
        script.

            var list = [{
                name: "benjamin",
                id: 1
            }, {
                name: "anna",
                id: 1
            }, {
                name: "Steve",
                id: 1
            }, {
                name: "Julian",
                id: 1
            }, {
                name: "Tomas",
                id: 1
            }, {
                name: "Bill",
                id: 1
            }];
            var processed = list.length;
            var myQueue = async.forever(
                function(next) {
                    // next is suitable for passing to things that need a callback(err [, whatever]);
                    // it will result in this function being called again.

                    async.mapLimit(list, 1, function(item, callback) {
                        setTimeout(function(){
                            item.id += 1;
                            //console.log("item: ", item)
                            callback(null, item);
                        }, 2000)
                    }, function(error, callback) {
                        //console.log("err clb", error, callback);
                        next();
                    });
                },
                function(err) {
                    // if next is called with a value in its first parameter, it will appear
                    // in here as 'err', and execution will stop.
                }
            );
        script.
            var Runner = angular.module('Runner', [
                'ui.bootstrap',
                'ui.bootstrap.tpls',
                'ui.router',
                'ui.utils',
                'restangular'
            ]);
            Runner.run(['$rootScope', '$state', 'Restangular', function($rootScope, $state, Restangular) {

                $rootScope.user = {
                    name: 'Eltiro',
                }
                Restangular.oneUrl('user', 'http://api.apicat.us:8070/user/signin').customPOST({username: 'admin', password: 'admin'}).then(function(response){
                    console.log(response)
                });

            }]);
            Runner.config(['$stateProvider', '$urlRouterProvider', 'RestangularProvider', function($stateProvider, $urlRouterProvider, RestangularProvider) {
                //RestangularProvider.setBaseUrl('http://' + document.location.host);
                RestangularProvider.setRestangularFields({
                    id: '_id'
                });
                RestangularProvider.setDefaultHeaders({
                    'Content-Type': 'application/json'
                });
                $urlRouterProvider.otherwise('/');
                $stateProvider
                    .state('home', {
                        url: '/',
                        views: {
                            'main': {
                                templateUrl: 'home.html',
                                controller: 'HomeCtrl as home'
                            }
                        }
                    })
                    .state('runner', {
                        url: '/runner',
                        views: {
                            'main': {
                                templateUrl: 'runner.html',
                                controller: 'RunnerCtrl as runner',
                                resolve: {
                                    queue: ['$stateParams', 'Restangular', function ($stateParams, Restangular) {
                                        return Restangular.all('queue').getList();
                                    }]
                                }
                            }
                        }
                    });

            }]);
            Runner.controller('RunnerCtrl', ['$scope', 'Restangular', 'queue', function($scope, Restangular, queue){
                this.queue = queue;
                this.runners = [{
                    name: 'oxoxoxo'
                }];
                this.create = function(task) {
                    var url = this.queue.getRestangularUrl();
                    console.log(task);
                    this.queue.post(task);
                    //Restangular.all('queue').customPOST(task);
                }
                this.update = function(task) {
                    console.log(queue);
                    task.put();
                };
                this.refresh = function() {
                    this.queue = this.queue.getList().$object;
                };
                this.task = {
                    uri: 'http://yahoo.com',
                    method: 'GET',
                    port: 80
                }
            }]);
            Runner.controller('HomeCtrl', ['$scope', function($scope){
            }]);
            Runner.controller('MainCtrl', ['$scope', function($scope) {

                console.log("started")
                this.apis = [{
                    name: 'Benjamin'
                }, {
                    name: 'Anna'
                }, {
                    name: 'Steve'
                }];
            }]);

    body(ng-controller="MainCtrl as main")
        nav(role="navigation").navbar.navbar-inverse.navbar-fixed-top
            div.container-fluid
                div.navbar-header
                    a(href="#").navbar-brand
                        img(alt="Brand", src="http://app.apicat.us/assets/images/logo.svg", width="20", height="20")
                #bs-example-navbar-collapse-1.collapse.navbar-collapse
                    ul.nav.navbar-nav
                        li.dropdown
                            a(href='#', role='button', aria-expanded='false').dropdown-toggle
                                i.fa.fa-fw.fa-cubes
                                |&nbsp;APIS
                                span.fa.fa-fw.fa-angle-down
                            ul.dropdown-menu(role='menu')
                                li
                                    a(href='#') Action
                                li
                                    a(href='#') Another action
                                li
                                    a(href='#') Something else here
                                li.divider
                                li
                                    a(href='#') Separated link
                                li.divider
                                li
                                    a(href='#') One more separated link
                        li.dropdown
                            a(href='#', data-toggle='dropdown', role='button', aria-expanded='false', dropdown).dropdown-toggle
                                i.fa.fa-fw.fa-users
                                |&nbsp;Users
                                span.fa.fa-fw.fa-angle-down
                            ul(role='menu').dropdown-menu
                                li
                                    a(href='#') Action
                                li
                                    a(href='#') Another action
                                li
                                    a(href='#') Something else here
                                li.divider
                                li
                                    a(href='#') Separated link
                                li.divider
                                li
                                    a(href='#') One more separated link
                    ul.nav.navbar-nav.navbar-right
                        li.dropdown
                            a(href='#', data-toggle='dropdown', role='button', aria-expanded='false').dropdown-toggle
                                | Benjamin@gmail.com
                                span.fa.fa-fw.fa-angle-down
                            ul(role='menu').dropdown-menu
                                li
                                    a(href='#') Action
                                li
                                    a(href='#') Another action
                                li
                                    a(href='#') Something else here
                                li.divider
                                li
                                    a(href='#') Separated link
        div(ui-view="main").container-fluid

    // Home
    script(type="text/ng-template" id="home.html")
        div.row
            div.col-lg-12
                div.page-header
                    h4
                        i.fa.fa-fw.fa-cubes
                        |&nbsp;{{home.name}}
    // Runner
    script(type="text/ng-template" id="runner.html")
        div(ui-view="main").container-fluid
            div.row
                div.col-lg-12
                    div.page-header
                        h4
                            i.fa.fa-fw.fa-cubes
                            |&nbsp;Api List
                    div(role="toolbar").btn-toolbar
                        div.btn-group
                            button(type="button", ng-click="addNewTaskPannel = !addNewTaskPannel").btn.btn-default
                                i.fa.fa-file-o
                            button(type="button").btn.btn-default
                                i.fa.fa-pencil-square-o
                            button(type="button").btn.btn-default
                                i.fa.fa-trash
                        div.btn-group
                            button(type="button", ng-click="runner.refresh()").btn.btn-default
                                i.fa.fa-refresh
                        form(role="form").form-inline.pull-right
                            div.form-group
                                div.input-group
                                    input(type="text").form-control
                                    span.input-group-btn
                                        button(type="button").btn.btn-default
                                            i.fa.fa-fw.fa-search
                    br
                    div(collapse="!addNewTaskPannel").row
                        div.col-lg-12.well
                            form(role="form", ng-model="runner.task", ng-submit="runner.create(runner.task)").form-horizontal
                                div.form-group
                                    label(for="uri").col-lg-2.control-label Uri
                                    div.col-lg-10
                                        input(type="url", ng-model="runner.task.uri", placeholder="URL", id="uri").form-control
                                div.form-group
                                    label(for="method").col-lg-2.control-label Method
                                    div.col-lg-10
                                        select(ng-model="runner.task.method", id="method").form-control
                                            option GET
                                            option POST
                                            option PUT
                                            option DELETE
                                div.form-group
                                    label(for="port").col-lg-2.control-label Port
                                    div.col-lg-10
                                        input(type="number", ng-model="runner.task.port", placeholder="PORT", id="port").form-control
                                button(type="submit").btn.btn-default Create
                    br
                    table.table.table-striped.table-hover.table-responsive
                        thead
                            tr
                                th
                                th Name
                                th Created
                                th Last Run
                                th.text-right Runs
                                th.text-center Enabled
                                th.text-center Proxied
                                th.text-right Status
                                th
                        tbody
                            tr(ng-repeat="task in runner.queue")
                                td
                                    input(type="checkbox")
                                td {{task.hostname}}
                                td {{task.created | date:'MM/dd/yy hh:mm a'}}
                                td {{task.lastRun | date:'MM/dd/yy hh:mm a'}}
                                td.text-right {{task.runs}}
                                td.text-center
                                    i.fa.fa-check-circle
                                td.text-center
                                    i.fa.fa-circle-thin
                                td.text-right
                                    {{task.status}}&nbsp;
                                    i.fa.fa-circle.text-success
                                td
                                    div(dropdown="").btn-group.pull-right
                                        button(type="button").btn.btn-default.btn-xs.dropdown-toggle
                                            i.fa.fa-fw.fa-bars
                                            span.fa.fa-fw.fa-angle-down
                                        ul.dropdown-menu(role='menu')
                                            li
                                                a(href='#') Action
                                            li
                                                a(href='#') Another action
                                            li
                                                a(href='#') Something else here
                                            li.divider
                                            li
                                                a(href='#') Separated link

